{
  "entityType" : "DASHBOARD",
  "entity" : {
    "title" : "Tango Dashboard",
    "image" : "tb-image;/api/images/system/assisted_living_administration_dashboard_widget_new_image_map_marker_image_1.svg",
    "mobileHide" : false,
    "mobileOrder" : null,
    "configuration" : {
      "description" : "Tango remote devices access",
      "widgets" : {
        "3ae4515e-675c-a32d-e6e6-a4d3f4194e32" : {
          "typeFullFqn" : "system.entity_admin_widgets.asset_admin_table",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1748986723384,
                  "endTimeMs" : 1749073123384
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Tango Remote Sites",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "entityName",
              "useRowStyleFunction" : false
            },
            "title" : "Asset admin table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "4cf73e36-3bc6-de83-0676-c1dfb9d84158",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6266926620654867
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7671167163893448,
                "decimals" : 0
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.14644245035287773,
                "decimals" : 0
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : {
              "headerButton" : [ {
                "name" : "Add asset",
                "icon" : "add",
                "type" : "customPretty",
                "customHtml" : "<form #addAssetForm=\"ngForm\" [formGroup]=\"addAssetFormGroup\"\n      (ngSubmit)=\"save()\" style=\"width: 480px;\">\n  <mat-toolbar class=\"flex flex-row\" color=\"primary\">\n    <h2>Add asset</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content>\n    <div class=\"mat-padding flex flex-col\">\n      <mat-form-field class=\"mat-block\">\n        <mat-label>Asset name</mat-label>\n        <input matInput formControlName=\"assetName\" required>\n        <mat-error *ngIf=\"addAssetFormGroup.get('assetName').hasError('required')\">\n          Asset name is required.\n        </mat-error>\n      </mat-form-field>\n      <div class=\"flex flex-row gap-2\">\n        <tb-entity-subtype-autocomplete\n            class=\"max-w-50% flex-full\"\n            formControlName=\"assetType\"\n            [required]=\"true\"\n            [entityType]=\"'ASSET'\"\n        ></tb-entity-subtype-autocomplete>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"assetLabel\">\n        </mat-form-field>\n      </div>\n      <div formGroupName=\"attributes\" class=\"flex flex-row gap-2\">\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Latitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Longitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"flex flex-row\">\n    <span class=\"flex-1\"></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || addAssetForm.invalid || !addAssetForm.dirty\">\n      Create\n    </button>\n  </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet assetService = $injector.get(widgetContext.servicesMap.get('assetService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenAddAssetDialog();\n\nfunction openAddAssetDialog() {\n    customDialog.customDialog(htmlTemplate, AddAssetDialogController).subscribe();\n}\n\nfunction AddAssetDialogController(instance) {\n    let vm = instance;\n    \n    vm.addAssetFormGroup = vm.fb.group({\n      assetName: ['', [vm.validators.required]],\n      assetType: ['', [vm.validators.required]],\n      assetLabel: [''],\n      attributes: vm.fb.group({\n          latitude: [null],\n          longitude: [null]\n      })      \n    });\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    \n    vm.save = function() {\n        vm.addAssetFormGroup.markAsPristine();\n        let asset = {\n            name: vm.addAssetFormGroup.get('assetName').value,\n            type: vm.addAssetFormGroup.get('assetType').value,\n            label: vm.addAssetFormGroup.get('assetLabel').value\n        };\n        assetService.saveAsset(asset).subscribe(\n            function (asset) {\n                saveAttributes(asset.id).subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        vm.dialogRef.close(null);\n                    }\n                );\n            }\n        );\n    };\n    \n    function saveAttributes(entityId) {\n        let attributes = vm.addAssetFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            attributesArray.push({key: key, value: attributes[key]});\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        } else {\n            return widgetContext.rxjs.of([]);\n        }\n    }\n}",
                "customResources" : [ ],
                "id" : "70837a9d-c3de-a9a7-03c5-dccd14998758"
              } ],
              "actionCellButton" : [ {
                "name" : "Edit asset",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<form #editAssetForm=\"ngForm\" [formGroup]=\"editAssetFormGroup\"\n      (ngSubmit)=\"save()\" style=\"width: 480px;\">\n  <mat-toolbar class=\"flex flex-row\" color=\"primary\">\n    <h2>Edit asset</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content>\n    <div class=\"mat-padding\" class=\"flex flex-col\">\n      <mat-form-field class=\"mat-block\">\n        <mat-label>Asset name</mat-label>\n        <input matInput formControlName=\"assetName\" required>\n        <mat-error *ngIf=\"editAssetFormGroup.get('assetName').hasError('required')\">\n          Asset name is required.\n        </mat-error>\n      </mat-form-field>\n      <div class=\"flex flex-row gap-2\">\n        <tb-entity-subtype-autocomplete\n            class=\"max-w-50% flex-full\"\n            formControlName=\"assetType\"\n            [required]=\"true\"\n            [entityType]=\"'ASSET'\"\n        ></tb-entity-subtype-autocomplete>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"assetLabel\">\n        </mat-form-field>\n      </div>\n      <div formGroupName=\"attributes\" class=\"flex flex-row gap-2\">\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Latitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Longitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"flex flex-row\">\n    <span class=\"flex-1\"></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            type=\"submit\"\n            style=\"margin-right: 20px;\"\n            [disabled]=\"(isLoading$ | async) || editAssetForm.invalid || !editAssetForm.dirty\">\n      Update\n    </button>\n  </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet assetService = $injector.get(widgetContext.servicesMap.get('assetService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditAssetDialog();\n\nfunction openEditAssetDialog() {\n    customDialog.customDialog(htmlTemplate, EditAssetDialogController).subscribe();\n}\n\nfunction EditAssetDialogController(instance) {\n    let vm = instance;\n    \n    vm.asset = null;\n    vm.attributes = {};\n    \n    vm.editAssetFormGroup = vm.fb.group({\n      assetName: ['', [vm.validators.required]],\n      assetType: ['', [vm.validators.required]],\n      assetLabel: [''],\n      attributes: vm.fb.group({\n          latitude: [null],\n          longitude: [null]\n      })      \n    });\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    \n    vm.save = function() {\n        vm.editAssetFormGroup.markAsPristine();\n        vm.asset.name = vm.editAssetFormGroup.get('assetName').value,\n        vm.asset.type = vm.editAssetFormGroup.get('assetType').value,\n        vm.asset.label = vm.editAssetFormGroup.get('assetLabel').value\n        assetService.saveAsset(vm.asset).subscribe(\n            function () {\n                saveAttributes().subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        vm.dialogRef.close(null);\n                    }\n                );\n            }\n        );\n    };\n    \n    getEntityInfo();\n    \n    function getEntityInfo() {\n        assetService.getAsset(entityId.id).subscribe(\n            function (asset) {\n                attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE',\n                                                    ['latitude', 'longitude']).subscribe(\n                   function (attributes) {\n                        for (let i = 0; i < attributes.length; i++) {\n                            vm.attributes[attributes[i].key] = attributes[i].value; \n                        }\n                        vm.asset = asset;\n                        vm.editAssetFormGroup.patchValue(\n                            {\n                                assetName: vm.asset.name,\n                                assetType: vm.asset.type,\n                                assetLabel: vm.asset.label,\n                                attributes: {\n                                    latitude: vm.attributes.latitude,\n                                    longitude: vm.attributes.longitude\n                                }\n                            }, {emitEvent: false}\n                        );\n                   } \n                );\n            }\n        );    \n    }\n    \n    function saveAttributes() {\n        let attributes = vm.editAssetFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            attributesArray.push({key: key, value: attributes[key]});\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributesArray);\n        } else {\n            return widgetContext.rxjs.of([]);\n        }\n    }\n}",
                "customResources" : [ ],
                "id" : "93931e52-5d7c-903e-67aa-b9435df44ff4"
              } ],
              "rowClick" : [ {
                "name" : "Selected Site",
                "icon" : "open_in_new",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboard",
                "targetDashboardStateId" : "default",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openNewBrowserTab" : false,
                "targetDashboardId" : "ea380430-4189-11f0-9143-ed31251bb06c",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "6d91712c-96e4-f25f-6294-6406af58b8ae"
              } ]
            },
            "configMode" : "basic",
            "titleFont" : {
              "sizeUnit" : "em",
              "family" : "monospace",
              "weight" : "bolder",
              "style" : "italic",
              "lineHeight" : "2"
            },
            "titleColor" : "#FF0000",
            "enableDataExport" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "3ae4515e-675c-a32d-e6e6-a4d3f4194e32"
        },
        "fe90ff98-1e02-d4c4-a91d-f3b6e32b4ab2" : {
          "typeFullFqn" : "system.map",
          "type" : "latest",
          "sizeX" : 8.5,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1748987775833,
                  "endTimeMs" : 1749074175833
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "mapType" : "geoMap",
              "layers" : [ {
                "label" : "{i18n:widgets.maps.layer.roadmap}",
                "provider" : "openstreet",
                "layerType" : "OpenStreetMap.Mapnik"
              }, {
                "label" : "{i18n:widgets.maps.layer.satellite}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery"
              }, {
                "label" : "{i18n:widgets.maps.layer.hybrid}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery",
                "referenceLayer" : "openstreetmap_hybrid"
              } ],
              "imageSource" : null,
              "markers" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "xKey" : {
                  "name" : "latitude",
                  "label" : "latitude",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                },
                "yKey" : {
                  "name" : "longitude",
                  "label" : "longitude",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                },
                "markerType" : "shape",
                "markerShape" : {
                  "shape" : "markerShape1",
                  "size" : 34,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerIcon" : {
                  "iconContainer" : "iconContainer1",
                  "icon" : "mdi:lightbulb-on",
                  "size" : 48,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerImage" : {
                  "type" : "image",
                  "image" : "https://static.thingsboard.cloud/assets/markers/shape1.svg",
                  "imageSize" : 34
                },
                "markerOffsetX" : 0.5,
                "markerOffsetY" : 1,
                "positionFunction" : "return {x: origXPos, y: origYPos};",
                "markerClustering" : {
                  "enable" : false,
                  "zoomOnClick" : true,
                  "maxZoom" : null,
                  "maxClusterRadius" : 80,
                  "zoomAnimation" : true,
                  "showCoverageOnHover" : true,
                  "spiderfyOnMaxZoom" : false,
                  "chunkedLoad" : false,
                  "lazyLoad" : true,
                  "useClusterMarkerColorFunction" : false,
                  "clusterMarkerColorFunction" : null
                },
                "label" : {
                  "show" : true,
                  "type" : "pattern",
                  "pattern" : "${entityName}"
                },
                "tooltip" : {
                  "show" : true,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See tooltip settings for details</small>",
                  "offsetX" : 0,
                  "offsetY" : -1
                },
                "click" : {
                  "type" : "doNothing"
                },
                "edit" : {
                  "enabledActions" : [ ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "dsEntityAliasId" : "4cf73e36-3bc6-de83-0676-c1dfb9d84158"
              } ],
              "polygons" : [ ],
              "circles" : [ ],
              "additionalDataSources" : [ ],
              "controlsPosition" : "topleft",
              "zoomActions" : [ "scroll", "doubleClick", "controlButtons" ],
              "scales" : [ ],
              "dragModeButton" : false,
              "fitMapBounds" : true,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "0,0",
              "defaultZoomLevel" : null,
              "mapPageSize" : 16384,
              "mapActionButtons" : [ ],
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "8px"
            },
            "title" : "Map",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "widgetCss" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "configMode" : "basic",
            "titleFont" : null,
            "titleColor" : null,
            "margin" : "0px",
            "borderRadius" : "0px",
            "iconSize" : "24px",
            "titleIcon" : "map",
            "iconColor" : "#1F6BDD",
            "actions" : { },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "fe90ff98-1e02-d4c4-a91d-f3b6e32b4ab2"
        }
      },
      "states" : {
        "default" : {
          "name" : "Supervision TC-900",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "3ae4515e-675c-a32d-e6e6-a4d3f4194e32" : {
                  "sizeX" : 11,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                },
                "fe90ff98-1e02-d4c4-a91d-f3b6e32b4ab2" : {
                  "sizeX" : 12,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 11
                }
              },
              "gridSettings" : {
                "layoutType" : "default",
                "backgroundColor" : "#FFFFFF99",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%",
                "minColumns" : 24,
                "viewFormat" : "grid",
                "autoFillHeight" : true,
                "rowHeight" : 70,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 40
              }
            }
          }
        }
      },
      "entityAliases" : {
        "4cf73e36-3bc6-de83-0676-c1dfb9d84158" : {
          "id" : "4cf73e36-3bc6-de83-0676-c1dfb9d84158",
          "alias" : "All Remote Sites",
          "filter" : {
            "type" : "entityGroup",
            "resolveMultiple" : true,
            "groupStateEntity" : false,
            "stateEntityParamName" : null,
            "defaultStateGroupType" : null,
            "defaultStateEntityGroup" : null,
            "groupType" : "ASSET",
            "entityGroup" : "942c4960-46e9-11f0-b94b-f3b14d0c4306"
          }
        },
        "19b3acce-11a8-e7a2-f114-4882bb582d44" : {
          "id" : "19b3acce-11a8-e7a2-f114-4882bb582d44",
          "alias" : "All Remote Devices",
          "filter" : {
            "type" : "entityGroup",
            "resolveMultiple" : true,
            "groupStateEntity" : false,
            "stateEntityParamName" : null,
            "defaultStateGroupType" : null,
            "defaultStateEntityGroup" : null,
            "groupType" : "DEVICE",
            "entityGroup" : "f1c09860-40b3-11f0-b971-355c7b7ccee6"
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY",
          "hideInterval" : false,
          "hideLastInterval" : false,
          "hideQuickInterval" : false
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1748901573256,
            "endTimeMs" : 1748987973256
          },
          "quickInterval" : "CURRENT_DAY",
          "hideInterval" : false,
          "hideLastInterval" : false,
          "hideFixedInterval" : false,
          "hideQuickInterval" : false
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        },
        "timezone" : "America/Toronto"
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true,
        "titleColor" : "rgba(255, 0, 0, 0.87)",
        "showDashboardLogo" : false,
        "dashboardLogoUrl" : "tb-image;/api/images/system/assisted_living_administration_dashboard_widget_new_image_map_marker_image_1.svg",
        "hideToolbar" : true,
        "showFilters" : true,
        "showUpdateDashboardImage" : true,
        "dashboardCss" : ""
      }
    },
    "name" : "Tango Dashboard",
    "resources" : null,
    "assignedCustomers" : null,
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "080171a0-40c6-11f0-bdec-dd129eb04c6d"
    },
    "ownerId" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  },
  "calculatedFields" : [ ]
}