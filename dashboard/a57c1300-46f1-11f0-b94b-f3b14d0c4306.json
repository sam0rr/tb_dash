{
  "entityType" : "DASHBOARD",
  "entity" : {
    "title" : "Site Detail View",
    "image" : "tb-image;/api/images/system/assisted_living_administration_dashboard_widget_new_image_map_marker_image_1.svg",
    "mobileHide" : true,
    "mobileOrder" : null,
    "configuration" : {
      "description" : "Dashboard including the list of all the devices of the site",
      "widgets" : {
        "acdddfda-6dfb-1ffe-8b96-fb99fdd0f2c9" : {
          "typeFullFqn" : "system.entity_admin_widgets.device_admin_table",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1748965660910,
                  "endTimeMs" : 1749052060910
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(255, 255, 255, 0.72)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Tango Remote Servers",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "entityName",
              "useRowStyleFunction" : false
            },
            "title" : "Device admin table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "81c8f3e7-1e10-5752-ac85-d0724cebf477",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8543859145110149
              }, {
                "name" : "active",
                "type" : "attribute",
                "label" : "active",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6537332345364764,
                "units" : "",
                "decimals" : 0
              }, {
                "name" : "Temp1",
                "type" : "timeseries",
                "label" : "Temp1",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.12049668416568315,
                "units" : "°C",
                "decimals" : 0
              }, {
                "name" : "Temp2",
                "type" : "timeseries",
                "label" : "Temp2",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.28855836984196814,
                "units" : "°C",
                "decimals" : 0
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(255, 255, 255, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : {
              "headerButton" : [ ],
              "actionCellButton" : [ {
                "name" : "Edit device",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\"\n      (ngSubmit)=\"save()\" style=\"width: 480px;\">\n  <mat-toolbar class=\"flex flex-row\" color=\"primary\">\n    <h2>Edit device</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content>\n    <div class=\"mat-padding flex flex-col\">\n      <mat-form-field class=\"mat-block\">\n        <mat-label>Device name</mat-label>\n        <input matInput formControlName=\"deviceName\" required>\n        <mat-error *ngIf=\"editDeviceFormGroup.get('deviceName').hasError('required')\">\n          Device name is required.\n        </mat-error>\n      </mat-form-field>\n      <div class=\"flex flex-row gap-2\">\n        <tb-entity-subtype-autocomplete\n            class=\"max-w-50% flex-full\"\n            formControlName=\"deviceType\"\n            [required]=\"true\"\n            [entityType]=\"'DEVICE'\"\n        ></tb-entity-subtype-autocomplete>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"deviceLabel\">\n        </mat-form-field>\n      </div>\n      <div formGroupName=\"attributes\" class=\"flex flex-row gap-2\">\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Latitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block max-w-50% flex-full\">\n          <mat-label>Longitude</mat-label>\n          <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"flex flex-row\">\n    <span class=\"flex-1\"></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Update\n    </button>\n  </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    \n    vm.device = null;\n    vm.attributes = {};\n    \n    vm.editDeviceFormGroup = vm.fb.group({\n      deviceName: ['', [vm.validators.required]],\n      deviceType: ['', [vm.validators.required]],\n      deviceLabel: [''],\n      attributes: vm.fb.group({\n          latitude: [null],\n          longitude: [null]\n      })      \n    });\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    \n    vm.save = function() {\n        vm.editDeviceFormGroup.markAsPristine();\n        if (vm.editDeviceFormGroup.get('deviceType').value !== vm.device.type) {\n            delete vm.device.deviceProfileId;\n        }\n        vm.device.name = vm.editDeviceFormGroup.get('deviceName').value,\n        vm.device.type = vm.editDeviceFormGroup.get('deviceType').value,\n        vm.device.label = vm.editDeviceFormGroup.get('deviceLabel').value\n        deviceService.saveDevice(vm.device).subscribe(\n            function () {\n                saveAttributes().subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        vm.dialogRef.close(null);\n                    }\n                );\n            }\n        );\n    };\n    \n    getEntityInfo();\n    \n    function getEntityInfo() {\n        deviceService.getDevice(entityId.id).subscribe(\n            function (device) {\n                attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE',\n                                                    ['latitude', 'longitude']).subscribe(\n                   function (attributes) {\n                        for (let i = 0; i < attributes.length; i++) {\n                            vm.attributes[attributes[i].key] = attributes[i].value; \n                        }\n                        vm.device = device;\n                        vm.editDeviceFormGroup.patchValue(\n                            {\n                                deviceName: vm.device.name,\n                                deviceType: vm.device.type,\n                                deviceLabel: vm.device.label,\n                                attributes: {\n                                    latitude: vm.attributes.latitude,\n                                    longitude: vm.attributes.longitude\n                                }\n                            }, {emitEvent: false}\n                        );\n                   } \n                );\n            }\n        );    \n    }\n    \n    function saveAttributes() {\n        let attributes = vm.editDeviceFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            attributesArray.push({key: key, value: attributes[key]});\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributesArray);\n        } else {\n            return widgetContext.rxjs.of([]);\n        }\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "93931e52-5d7c-903e-67aa-b9435df44ff4"
              } ],
              "rowClick" : [ {
                "name" : "Select Device",
                "icon" : "open_in_new",
                "useShowWidgetActionFunction" : false,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboard",
                "targetDashboardStateId" : "default",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openNewBrowserTab" : false,
                "targetDashboardId" : "0febcc30-4161-11f0-9143-ed31251bb06c",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b9179f25-e079-5d17-a692-7e93c5fbb367"
              } ]
            },
            "configMode" : "basic",
            "titleFont" : {
              "sizeUnit" : "em",
              "family" : "monospace",
              "weight" : "bolder",
              "style" : "italic",
              "lineHeight" : "2"
            },
            "titleColor" : "#FF0000",
            "enableDataExport" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "acdddfda-6dfb-1ffe-8b96-fb99fdd0f2c9"
        }
      },
      "states" : {
        "default" : {
          "name" : "Site Detail View",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "acdddfda-6dfb-1ffe-8b96-fb99fdd0f2c9" : {
                  "sizeX" : 12,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "layoutType" : "default",
                "backgroundColor" : "#FFFFFF",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%",
                "minColumns" : 24,
                "viewFormat" : "grid",
                "autoFillHeight" : true,
                "rowHeight" : 70,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        }
      },
      "entityAliases" : {
        "81c8f3e7-1e10-5752-ac85-d0724cebf477" : {
          "id" : "81c8f3e7-1e10-5752-ac85-d0724cebf477",
          "alias" : "Devices Of Site",
          "filter" : {
            "type" : "relationsQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : null,
            "defaultStateEntity" : {
              "entityType" : "DEVICE",
              "id" : "f9348de0-40b3-11f0-90ac-c38ddc901b1d"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "fetchLastLevelOnly" : false,
            "filters" : [ ]
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "displayValue" : "",
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY",
          "hideInterval" : false,
          "hideLastInterval" : false,
          "hideQuickInterval" : false
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1748985704684,
            "endTimeMs" : 1749072104684
          },
          "quickInterval" : "CURRENT_DAY",
          "hideInterval" : false,
          "hideLastInterval" : false,
          "hideFixedInterval" : false,
          "hideQuickInterval" : false
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true,
        "titleColor" : "rgba(0,0,0,0.870588)",
        "showDashboardLogo" : false,
        "dashboardLogoUrl" : null,
        "hideToolbar" : true,
        "showFilters" : true,
        "showUpdateDashboardImage" : true,
        "dashboardCss" : ""
      }
    },
    "name" : "Site Detail View",
    "resources" : null,
    "assignedCustomers" : null,
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "a57c1300-46f1-11f0-b94b-f3b14d0c4306"
    },
    "ownerId" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  },
  "calculatedFields" : [ ]
}